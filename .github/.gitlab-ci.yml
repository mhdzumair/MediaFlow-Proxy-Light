image: rust:latest

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  RUST_VERSION: "1.75"
  DOCKER_REGISTRY: $CI_REGISTRY
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE

# Cache dependencies and build artifacts
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cargo/
    - target/

stages:
  - test
  - build
  - package
  - deploy

.rust-setup:
  before_script:
    - rustup default ${RUST_VERSION}
    - rustup component add clippy rustfmt
    - rustc --version && cargo --version

test:
  extends: .rust-setup
  stage: test
  script:
    - cargo fmt -- --check
    - cargo clippy -- -D warnings
    - cargo test

build-linux-amd64:
  extends: .rust-setup
  stage: build
  script:
    - cargo build --release --target x86_64-unknown-linux-gnu
  artifacts:
    paths:
      - target/x86_64-unknown-linux-gnu/release/mediaflow-proxy-light
    expire_in: 1 week

build-linux-arm64:
  extends: .rust-setup
  stage: build
  script:
    - rustup target add aarch64-unknown-linux-gnu
    - apt-get update && apt-get install -y gcc-aarch64-linux-gnu
    - cargo build --release --target aarch64-unknown-linux-gnu
  artifacts:
    paths:
      - target/aarch64-unknown-linux-gnu/release/mediaflow-proxy-light
    expire_in: 1 week

docker-multiarch:
  stage: package
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
  script:
    - |
      docker buildx build --push \
        --platform linux/amd64,linux/arm64 \
        --tag $DOCKER_IMAGE_NAME:$CI_COMMIT_SHA \
        --tag $DOCKER_IMAGE_NAME:latest \
        .
